{"version":3,"file":"sld-editor.js","sourceRoot":"","sources":["../sld-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, nothing, LitElement, svg, TemplateResult } from 'lit';\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ref } from 'lit/directives/ref.js';\n\nimport { newEditEvent } from '@openscd/open-scd-core';\n\nimport type { Dialog } from '@material/mwc-dialog';\nimport type { SingleSelectedEvent } from '@material/mwc-list';\nimport type { TextField } from '@material/mwc-textfield';\n\nimport '@material/mwc-dialog';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item.js';\nimport '@material/mwc-textfield';\n\nimport { equipmentGraphic, movePath, resizePath, symbols } from './icons.js';\nimport {\n  attributes,\n  connectionStartPoints,\n  elementPath,\n  newConnectEvent,\n  newPlaceEvent,\n  newResizeEvent,\n  newRotateEvent,\n  newStartConnectEvent,\n  newStartPlaceEvent,\n  newStartResizeEvent,\n  Point,\n  privType,\n  sldNs,\n  svgNs,\n} from './util.js';\n\ntype Rect = [number, number, number, number];\n\nfunction contains([x1, y1, w1, h1]: Rect, [x2, y2, w2, h2]: Rect) {\n  return x1 <= x2 && y1 <= y2 && x1 + w1 >= x2 + w2 && y1 + h1 >= y2 + h2;\n}\n\nfunction overlaps([x1, y1, w1, h1]: Rect, [x2, y2, w2, h2]: Rect) {\n  if (x1 >= x2 + w2 || x2 >= x1 + w1) return false;\n  if (y1 >= y2 + h2 || y2 >= y1 + h1) return false;\n  return true;\n}\n\nfunction containsRect(\n  element: Element,\n  x0: number,\n  y0: number,\n  w0: number,\n  h0: number\n): boolean {\n  const {\n    pos: [x, y],\n    dim: [w, h],\n  } = attributes(element);\n  return contains([x, y, w, h], [x0, y0, w0, h0]);\n}\n\nfunction overlapsRect(\n  element: Element,\n  x0: number,\n  y0: number,\n  w0: number,\n  h0: number\n): boolean {\n  const {\n    pos: [x, y],\n    dim: [w, h],\n  } = attributes(element);\n  return overlaps([x, y, w, h], [x0, y0, w0, h0]);\n}\n\nfunction cleanPath(path: Point[]) {\n  let i = path.length - 2;\n  while (i > 0) {\n    const [x, y] = path[i];\n    const [nx, ny] = path[i + 1];\n    const [px, py] = path[i - 1];\n\n    if (\n      (x === nx && y === ny) ||\n      (x === nx && x === px) ||\n      (y === ny && y === py)\n    )\n      path.splice(i, 1);\n    i -= 1;\n  }\n}\n\nconst parentTags: Partial<Record<string, string>> = {\n  ConductingEquipment: 'Bay',\n  Bay: 'VoltageLevel',\n  VoltageLevel: 'Substation',\n};\n\nconst singleTerminal = new Set([\n  'VTR',\n  'GEN',\n  'MOT',\n  'FAN',\n  'PMP',\n  'EFN',\n  'BAT',\n  'RRC',\n  'SAR',\n  'SMC',\n  'IFL',\n]);\n\n@customElement('sld-editor')\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport class SLDEditor extends LitElement {\n  @property()\n  doc!: XMLDocument;\n\n  @property()\n  substation!: Element;\n\n  @property()\n  editCount = -1;\n\n  @property()\n  gridSize = 32;\n\n  @property()\n  nsp = 'esld';\n\n  @property()\n  placing?: Element;\n\n  @property()\n  resizing?: Element;\n\n  @property()\n  connecting?: {\n    equipment: Element;\n    path: Point[];\n    terminal: 'top' | 'bottom';\n  };\n\n  @query('#resizeSubstationUI')\n  resizeSubstationUI!: Dialog;\n\n  @query('#substationWidthUI')\n  substationWidthUI!: TextField;\n\n  @query('#substationHeightUI')\n  substationHeightUI!: TextField;\n\n  @query('svg#sld')\n  sld!: SVGGraphicsElement;\n\n  @state()\n  mouseX = 0;\n\n  @state()\n  mouseY = 0;\n\n  @state()\n  mouseX2 = 0;\n\n  @state()\n  mouseY2 = 0;\n\n  @state()\n  menu?: { element: Element; top: number; left: number };\n\n  svgCoordinates(clientX: number, clientY: number) {\n    const p = new DOMPoint(clientX, clientY);\n    const { x, y } = p.matrixTransform(this.sld.getScreenCTM()!.inverse());\n    return [x, y].map(coord => Math.max(0, coord));\n  }\n\n  canPlaceAt(element: Element, x: number, y: number, w: number, h: number) {\n    if (element.tagName === 'Substation') return true;\n\n    const overlappingSibling = Array.from(\n      this.substation.querySelectorAll(element.tagName)\n    ).find(sibling => sibling !== element && overlapsRect(sibling, x, y, w, h));\n    if (overlappingSibling) {\n      return false;\n    }\n\n    const containingParent =\n      element.tagName === 'VoltageLevel'\n        ? containsRect(this.substation, x, y, w, h)\n        : Array.from(\n            this.substation.querySelectorAll(parentTags[element.tagName]!)\n          ).find(parent => containsRect(parent, x, y, w, h));\n    if (containingParent) return true;\n    return false;\n  }\n\n  canResizeTo(element: Element, w: number, h: number) {\n    const {\n      pos: [x, y],\n      dim: [oldW, oldH],\n    } = attributes(element);\n\n    if (\n      !this.canPlaceAt(element, x, y, w, h) &&\n      this.canPlaceAt(element, x, y, oldW, oldH)\n    )\n      return false;\n\n    const lostChild = Array.from(element.children).find(child => {\n      if (parentTags[child.tagName] !== element.tagName) return false;\n      const {\n        pos: [cx, cy],\n        dim: [cw, ch],\n      } = attributes(child);\n\n      return !contains([x, y, w, h], [cx, cy, cw, ch]);\n    });\n    if (lostChild) return false;\n\n    return true;\n  }\n\n  renderedPosition(container: Element): Point {\n    let {\n      pos: [x, y],\n    } = attributes(container);\n    if (\n      this.placing &&\n      container.closest(this.placing.tagName) === this.placing\n    ) {\n      const {\n        pos: [parentX, parentY],\n      } = attributes(this.placing);\n      x += this.mouseX - parentX;\n      y += this.mouseY - parentY;\n    }\n    return [x, y];\n  }\n\n  handleKeydown = ({ key }: KeyboardEvent) => {\n    if (key === 'Escape') this.menu = undefined;\n  };\n\n  handleClick = (_e: MouseEvent) => {\n    this.menu = undefined;\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('keydown', this.handleKeydown);\n    window.addEventListener('click', this.handleClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener('keydown', this.handleKeydown);\n    window.removeEventListener('click', this.handleClick);\n  }\n\n  nearestOpenTerminal(equipment?: Element): 'top' | 'bottom' | undefined {\n    if (!equipment) return undefined;\n    const topTerminal = equipment.querySelector('Terminal[name=\"T1\"]');\n    const bottomTerminal = equipment.querySelector('Terminal:not([name=\"T1\"])');\n    const oneSided = singleTerminal.has(equipment.getAttribute('type') ?? '');\n    if (topTerminal && bottomTerminal) return undefined;\n    if (oneSided && (topTerminal || bottomTerminal)) return undefined;\n    if (oneSided) return 'top';\n    if (topTerminal) return 'bottom';\n    if (bottomTerminal) return 'top';\n\n    const [mX2, mY2] = [this.mouseX2, this.mouseY2].map(n => n % 1);\n    const { rot } = attributes(equipment);\n    if (rot === 0 && mY2 === 0.5) return 'bottom';\n    if (rot === 1 && mX2 === 0) return 'bottom';\n    if (rot === 2 && mY2 === 0) return 'bottom';\n    if (rot === 3 && mX2 === 0.5) return 'bottom';\n    return 'top';\n  }\n\n  render() {\n    const {\n      dim: [w, h],\n    } = attributes(this.substation);\n\n    const placingTarget =\n      this.placing?.tagName === 'VoltageLevel'\n        ? svg`<rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\"></rect>`\n        : nothing;\n\n    let placingElement = svg``;\n    if (this.placing) {\n      if (\n        this.placing.tagName === 'VoltageLevel' ||\n        this.placing.tagName === 'Bay'\n      )\n        placingElement = svg`${this.renderContainer(this.placing, true)}`;\n      else if (this.placing.tagName === 'ConductingEquipment')\n        placingElement = this.renderEquipment(this.placing, { preview: true });\n    }\n\n    let placingIndicator = svg``;\n    if (this.placing) {\n      const {\n        dim: [w0, h0],\n      } = attributes(this.placing);\n      const invalid = !this.canPlaceAt(\n        this.placing,\n        this.mouseX,\n        this.mouseY,\n        w0,\n        h0\n      );\n      placingIndicator = svg`\n      <foreignObject x=\"${this.mouseX + 1}\" y=\"${this.mouseY + 0.5}\"\n          width=\"1\" height=\"1\" class=\"preview\"\n          style=\"pointer-events: none; overflow: visible;\">\n        <span class=\"${classMap({ indicator: true, invalid })}\">\n        (${this.mouseX},${this.mouseY})\n        </span>\n      </foreignObject>\n    `;\n    }\n\n    let resizingIndicator = svg``;\n    if (this.resizing) {\n      const {\n        pos: [x, y],\n      } = attributes(this.resizing);\n      const newW = Math.max(1, this.mouseX - x + 1);\n      const newH = Math.max(1, this.mouseY - y + 1);\n      const invalid = !this.canResizeTo(this.resizing, newW, newH);\n      resizingIndicator = svg`\n      <foreignObject x=\"${this.mouseX + 1}\" y=\"${this.mouseY + 0.5}\"\n        width=\"1\" height=\"1\" class=\"preview\"\n        style=\"pointer-events: none; overflow: visible;\">\n        <span class=\"${classMap({ indicator: true, invalid })}\">\n        (${newW}&times;${newH})\n        </span>\n      </foreignObject>\n    `;\n    }\n\n    const connectionPreview = [];\n    if (this.connecting) {\n      const { equipment, path, terminal } = this.connecting;\n      let i = 0;\n      while (i < path.length - 2) {\n        const [x1, y1] = path[i];\n        const [x2, y2] = path[i + 1];\n        connectionPreview.push(\n          svg`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\"\n                stroke-linecap=\"square\" stroke=\"black\" stroke-width=\"0.06\" />`\n        );\n        i += 1;\n      }\n\n      const [[x1, y1], [oldX2, oldY2]] = path.slice(-2);\n      const vertical = x1 === oldX2;\n\n      let x3 = this.mouseX + 0.5;\n      let y3 = this.mouseY + 0.5;\n      let [x4, y4] = [x3, y3];\n\n      const targetEq = Array.from(\n        this.substation.querySelectorAll('ConductingEquipment')\n      )\n        .filter(eq => eq !== equipment)\n        .find(eq => {\n          const {\n            pos: [x, y],\n          } = attributes(eq);\n          return x === this.mouseX && y === this.mouseY;\n        });\n\n      const toTerminal = this.nearestOpenTerminal(targetEq);\n\n      if (targetEq && toTerminal) {\n        const { far, close } = connectionStartPoints(targetEq)[toTerminal];\n        [x3, y3] = far;\n        [x4, y4] = close;\n      }\n\n      const x2 = vertical ? oldX2 : x3;\n      const y2 = vertical ? y3 : oldY2;\n\n      connectionPreview.push(\n        svg`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\"\n                stroke-linecap=\"square\" stroke=\"black\" stroke-width=\"0.06\" />`,\n        svg`<line x1=\"${x2}\" y1=\"${y2}\" x2=\"${x3}\" y2=\"${y3}\"\n                stroke-linecap=\"square\" stroke=\"black\" stroke-width=\"0.06\" />`,\n        svg`<line x1=\"${x3}\" y1=\"${y3}\" x2=\"${x4}\" y2=\"${y4}\"\n                stroke-linecap=\"square\" stroke=\"black\" stroke-width=\"0.06\" />`\n      );\n      connectionPreview.push(\n        svg`<rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\"\n      @click=${() => {\n        path[path.length - 1] = [x2, y2];\n        path.push([x3, y3]);\n        path.push([x4, y4]);\n        cleanPath(path);\n        this.requestUpdate();\n        if (targetEq && toTerminal)\n          this.dispatchEvent(\n            newConnectEvent({\n              equipment,\n              terminal,\n              path,\n              connectTo: targetEq,\n              toTerminal,\n            })\n          );\n      }}></rect>`\n      );\n    }\n\n    let menu = html``;\n    if (this.menu) {\n      const { element } = this.menu;\n      const [name, type, desc] = ['name', 'type', 'desc'].map(\n        attr => element.getAttribute(attr) ?? ''\n      );\n      menu = html`\n        <menu\n          style=\"position: fixed; top: ${this.menu.top}px; left: ${this.menu\n            .left}px; background: var(--oscd-base3, white); margin: 0px; padding: 0px; box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23); --mdc-list-vertical-padding: 0px;\"\n          ${ref(async (m?: Element) => {\n            if (!(m instanceof HTMLElement)) return;\n            await this.updateComplete;\n            const { bottom, right } = m.getBoundingClientRect();\n            if (bottom > window.innerHeight) {\n              m.style.removeProperty('top');\n              // eslint-disable-next-line no-param-reassign\n              m.style.bottom = '0px';\n            }\n            if (right > window.innerWidth) {\n              m.style.removeProperty('left');\n              // eslint-disable-next-line no-param-reassign\n              m.style.right = '0px';\n            }\n          })}\n        >\n          <mwc-list\n            @selected=${({ detail: { index } }: SingleSelectedEvent) => {\n              const { flip } = attributes(element);\n              [\n                () => {\n                  this.dispatchEvent(\n                    newEditEvent({\n                      element,\n                      attributes: {\n                        [`${this.nsp}:flip`]: {\n                          namespaceURI: sldNs,\n                          value: flip ? null : 'true',\n                        },\n                      },\n                    })\n                  );\n                },\n                () => {\n                  this.dispatchEvent(newRotateEvent(element));\n                },\n                () => this.dispatchEvent(newStartPlaceEvent(element)),\n              ][index]();\n              this.menu = undefined;\n            }}\n          >\n            <mwc-list-item graphic=\"icon\">\n              <span>Mirror</span>\n              <mwc-icon slot=\"graphic\">flip</mwc-icon>\n            </mwc-list-item>\n            <mwc-list-item graphic=\"icon\">\n              <span>Rotate</span>\n              <mwc-icon slot=\"graphic\">rotate_90_degrees_cw</mwc-icon>\n            </mwc-list-item>\n            <mwc-list-item graphic=\"icon\">\n              <span>Move</span>\n              <mwc-icon slot=\"graphic\">drag_pan</mwc-icon>\n            </mwc-list-item>\n            <li divider role=\"separator\"></li>\n            <mwc-list-item twoline graphic=\"avatar\" noninteractive>\n              <span>${name}</span>\n              <span slot=\"secondary\">${type}${desc}</span>\n              ${equipmentGraphic(type)}\n            </mwc-list-item>\n          </mwc-list>\n        </menu>\n      `;\n    }\n\n    return html`<section>\n      <h2>\n        ${this.substation.getAttribute('name')}\n        <mwc-icon-button\n          label=\"Resize Substation\"\n          @click=${() => this.resizeSubstationUI.show()}\n        >\n          <svg xmlns=\"${svgNs}\" width=\"24\" height=\"24\" viewBox=\"0 96 960 960\">\n            ${resizePath}\n          </svg>\n        </mwc-icon-button>\n      </h2>\n      <svg\n        id=\"sld\"\n        viewBox=\"0 0 ${w} ${h}\"\n        width=\"${w * this.gridSize}\"\n        height=\"${h * this.gridSize}\"\n        stroke-width=\"0.1\"\n        fill=\"none\"\n        @mousemove=${(e: MouseEvent) => {\n          const [x, y] = this.svgCoordinates(e.clientX, e.clientY);\n          this.mouseX = Math.floor(x);\n          this.mouseY = Math.floor(y);\n          this.mouseX2 = Math.floor(x * 2) / 2;\n          this.mouseY2 = Math.floor(y * 2) / 2;\n        }}\n      >\n        <style>\n          .indicator {\n            font-size: 0.6px;\n            overflow: visible;\n            font-family: 'Roboto', sans-serif;\n            background: white;\n            color: rgb(0, 0, 0 / 0.83);\n          }\n          .indicator.invalid {\n            color: #bb1326;\n          }\n          .handle {\n            visibility: hidden;\n          }\n          :focus {\n            outline: none;\n          }\n          :focus > .handle,\n          :focus-within > .handle {\n            opacity: 0.2;\n            visibility: visible;\n          }\n          .handle:hover,\n          .handle:focus {\n            visibility: visible;\n            opacity: 1;\n          }\n          rect {\n            shape-rendering: crispEdges;\n          }\n          section:not(:hover) .preview {\n            visibility: hidden;\n          }\n          .preview {\n            opacity: 0.83;\n          }\n        </style>\n        ${symbols}\n        <rect width=\"100%\" height=\"100%\" fill=\"white\"></rect>\n        ${placingTarget}\n        ${Array.from(this.substation.children)\n          .filter(child => child.tagName === 'VoltageLevel')\n          .map(vl => svg`${this.renderContainer(vl)}`)}\n        ${placingElement} ${placingIndicator} ${resizingIndicator}\n        ${connectionPreview}\n        ${this.connecting?.equipment.closest('Substation') === this.substation\n          ? Array.from(\n              this.substation.querySelectorAll('ConductingEquipment')\n            ).map(eq => this.renderEquipment(eq, { connect: true }))\n          : nothing}\n        ${Array.from(this.substation.querySelectorAll('ConnectivityNode'))\n          .filter(\n            node =>\n              node.getAttribute('name') !== 'grounded' &&\n              !(\n                this.placing &&\n                node.closest(this.placing.tagName) === this.placing\n              )\n          )\n          .map(cNode => this.renderConnectivityNode(cNode))}\n      </svg>\n      ${menu}\n      <mwc-dialog\n        id=\"resizeSubstationUI\"\n        heading=\"Resize ${this.substation.getAttribute('name')}\"\n      >\n        <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n          <mwc-textfield\n            id=\"substationWidthUI\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            label=\"Width\"\n            value=\"${w}\"\n            dialogInitialFocus\n            autoValidate\n            .validityTransform=${(value: string, validity: ValidityState) => {\n              const {\n                dim: [_w, oldH],\n              } = attributes(this.substation);\n              if (\n                validity.valid &&\n                !this.canResizeTo(this.substation, parseInt(value, 10), oldH)\n              ) {\n                return { valid: false, rangeUnderflow: true };\n              }\n              return {};\n            }}\n          ></mwc-textfield>\n          <mwc-textfield\n            id=\"substationHeightUI\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            label=\"Height\"\n            value=\"${h}\"\n            autoValidate\n            .validityTransform=${(value: string, validity: ValidityState) => {\n              const {\n                dim: [oldW, _h],\n              } = attributes(this.substation);\n              if (\n                validity.valid &&\n                !this.canResizeTo(this.substation, oldW, parseInt(value, 10))\n              ) {\n                return { valid: false, rangeUnderflow: true };\n              }\n              return {};\n            }}\n          ></mwc-textfield>\n        </div>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${() => {\n            const valid = Array.from(\n              this.resizeSubstationUI.querySelectorAll('mwc-textfield')\n            ).every(textField => textField.checkValidity());\n            if (!valid) return;\n            const {\n              dim: [oldW, oldH],\n            } = attributes(this.substation);\n            const [newW, newH] = [\n              this.substationWidthUI,\n              this.substationHeightUI,\n            ].map(ui => parseInt(ui.value ?? '1', 10).toString());\n            this.resizeSubstationUI.close();\n            if (newW === oldW.toString() && newH === oldH.toString()) return;\n            this.dispatchEvent(\n              newEditEvent({\n                element: this.substation,\n                attributes: {\n                  [`${this.nsp}:w`]: { namespaceURI: sldNs, value: newW },\n                  [`${this.nsp}:h`]: { namespaceURI: sldNs, value: newH },\n                },\n              })\n            );\n          }}\n          >resize</mwc-button\n        >\n        <mwc-button dialogAction=\"close\" slot=\"secondaryAction\"\n          >cancel</mwc-button\n        >\n      </mwc-dialog>\n    </section>`;\n  }\n\n  renderContainer(bayOrVL: Element, preview = false): TemplateResult<2> {\n    const name = bayOrVL.getAttribute('name') ?? '';\n    const isVL = bayOrVL.tagName === 'VoltageLevel';\n    if (this.placing === bayOrVL && !preview) return svg``;\n\n    const [x, y] = this.renderedPosition(bayOrVL);\n    let {\n      dim: [w, h],\n    } = attributes(bayOrVL);\n    let handleClick: (() => void) | undefined;\n    let invalid = false;\n\n    if (this.resizing === bayOrVL) {\n      w = Math.max(1, this.mouseX - x + 1);\n      h = Math.max(1, this.mouseY - y + 1);\n      if (this.canResizeTo(bayOrVL, w, h))\n        handleClick = () => {\n          this.dispatchEvent(\n            newResizeEvent({\n              w,\n              h,\n              element: bayOrVL,\n            })\n          );\n        };\n      else invalid = true;\n    }\n\n    if (this.placing === bayOrVL) {\n      let parent: Element | undefined;\n      if (isVL) parent = this.substation;\n      else\n        parent = Array.from(\n          this.substation.querySelectorAll(':root > Substation > VoltageLevel')\n        ).find(vl => containsRect(vl, x, y, w, h));\n      if (parent && this.canPlaceAt(bayOrVL, x, y, w, h))\n        handleClick = () => {\n          this.dispatchEvent(\n            newPlaceEvent({\n              x,\n              y,\n              element: bayOrVL,\n              parent: parent!,\n            })\n          );\n        };\n      else invalid = true;\n    }\n\n    let moveHandle = svg``;\n    let resizeHandle = svg``;\n    let placingTarget = svg``;\n    if (\n      this.resizing === bayOrVL ||\n      (isVL && this.placing?.tagName === 'Bay') ||\n      (!isVL && this.placing?.tagName === 'ConductingEquipment')\n    )\n      placingTarget = svg`<rect x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"\n        @click=${handleClick || nothing} fill=\"url(#grid)\"></rect>`;\n\n    if (!this.placing && !this.resizing && !this.connecting) {\n      moveHandle = svg`\n<a class=\"handle\" href=\"#0\" @click=${() =>\n        this.dispatchEvent(newStartPlaceEvent(bayOrVL))}>\n  <svg xmlns=\"${svgNs}\" height=\"1\" width=\"1\"\n    viewBox=\"0 96 960 960\" x=\"${x}\" y=\"${y}\">\n    <rect fill=\"white\" x=\"10%\" y=\"20%\" width=\"80%\" height=\"80%\"></rect>\n    ${movePath}\n  </svg>\n</a>\n    `;\n      resizeHandle = svg`\n<a class=\"handle\" href=\"#0\" @click=${() =>\n        this.dispatchEvent(newStartResizeEvent(bayOrVL))}>\n  <svg xmlns=\"${svgNs}\" height=\"1\" width=\"1\"\n    viewBox=\"0 96 960 960\" x=\"${w + x - 1}\" y=\"${h + y - 1}\">\n    <rect fill=\"white\" x=\"10%\" y=\"20%\" width=\"80%\" height=\"80%\"></rect>\n    ${resizePath}\n  </svg>\n</a>\n      `;\n    }\n\n    return svg`<g id=\"${elementPath(bayOrVL)}\" class=${classMap({\n      voltagelevel: isVL,\n      bay: !isVL,\n      preview,\n    })} tabindex=\"0\" pointer-events=\"all\" style=\"outline: none;\">\n      <rect\n    @click=${\n      handleClick || nothing\n    } x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"\n      fill=\"white\" stroke-dasharray=\"${isVL ? nothing : '0.18'}\" stroke=\"${\n      // eslint-disable-next-line no-nested-ternary\n      invalid ? '#BB1326' : isVL ? '#F5E214' : '#12579B'\n    }\" stroke-width=\"0.06\"></rect>\n      <text x=\"${x + 0.1}\" y=\"${y - 0.2}\" fill=\"#000000\" fill-opacity=\"0.83\"\n      pointer-events=\"none\" style=\"font: 0.6px sans-serif;\">${name}</text>\n      ${moveHandle}\n      ${Array.from(bayOrVL.children)\n        .filter(child => child.tagName === 'Bay')\n        .map(bay => this.renderContainer(bay))}\n      ${Array.from(bayOrVL.children)\n        .filter(child => child.tagName === 'ConductingEquipment')\n        .map(equipment => this.renderEquipment(equipment))}\n        ${\n          preview\n            ? Array.from(bayOrVL.querySelectorAll('ConnectivityNode'))\n                .filter(child => child.getAttribute('name') !== 'grounded')\n                .map(cNode => this.renderConnectivityNode(cNode))\n            : nothing\n        }\n      ${placingTarget}\n      ${resizeHandle}\n    </g>`;\n  }\n\n  renderEquipment(\n    equipment: Element,\n    { preview = false, connect = false } = {}\n  ) {\n    if (this.placing === equipment && !preview) return svg``;\n    if (\n      this.connecting?.equipment.closest('Substation') === this.substation &&\n      !connect\n    )\n      return svg``;\n\n    const [x, y] = this.renderedPosition(equipment);\n    const { flip, rot } = attributes(equipment);\n    const deg = 90 * rot;\n\n    const eqType = equipment.getAttribute('type')!;\n    const symbol = ['CBR', 'CTR', 'VTR', 'DIS', 'IFL'].includes(eqType)\n      ? eqType\n      : 'ConductingEquipment';\n\n    let handleClick = () => {\n      this.dispatchEvent(newStartPlaceEvent(equipment));\n    };\n\n    if (this.placing === equipment) {\n      const parent = Array.from(\n        this.substation.querySelectorAll(\n          ':root > Substation > VoltageLevel > Bay'\n        )\n      ).find(vl => containsRect(vl, x, y, 1, 1));\n      if (parent && this.canPlaceAt(equipment, x, y, 1, 1))\n        handleClick = () => {\n          this.dispatchEvent(\n            newPlaceEvent({\n              x,\n              y,\n              element: equipment,\n              parent,\n            })\n          );\n        };\n    }\n\n    const terminals = Array.from(equipment.children).filter(\n      c => c.tagName === 'Terminal'\n    );\n    const topTerminal = terminals.find(t => t.getAttribute('name') === 'T1');\n    const bottomTerminal = terminals.find(t => t.getAttribute('name') !== 'T1');\n\n    const topConnector =\n      topTerminal || this.placing || this.resizing || this.connecting\n        ? nothing\n        : svg`<circle cx=\"0.5\" cy=\"0\" r=\"0.2\" opacity=\"0.4\"\n      fill=\"#BB1326\" stroke=\"#F5E214\"\n    @click=${() =>\n      this.dispatchEvent(newStartConnectEvent({ equipment, terminal: 'top' }))}\n    @contextmenu=${(e: MouseEvent) => {\n      e.preventDefault();\n    }}\n      />`;\n\n    const topIndicator =\n      !this.connecting ||\n      this.connecting.equipment === equipment ||\n      (this.connecting &&\n        this.mouseX === x &&\n        this.mouseY === y &&\n        this.nearestOpenTerminal(equipment) === 'top') ||\n      topTerminal\n        ? nothing\n        : svg`<polygon points=\"0.3,0 0.7,0 0.5,0.4\" \n                fill=\"#12579B\" opacity=\"0.4\" />`;\n\n    const bottomConnector =\n      bottomTerminal ||\n      this.placing ||\n      this.resizing ||\n      this.connecting ||\n      singleTerminal.has(eqType)\n        ? nothing\n        : svg`<circle cx=\"0.5\" cy=\"1\" r=\"0.2\" opacity=\"0.4\"\n      fill=\"#BB1326\" stroke=\"#F5E214\"\n    @click=${() =>\n      this.dispatchEvent(\n        newStartConnectEvent({ equipment, terminal: 'bottom' })\n      )}\n    @contextmenu=${(e: MouseEvent) => {\n      e.preventDefault();\n    }}\n      />`;\n\n    const bottomIndicator =\n      !this.connecting ||\n      this.connecting.equipment === equipment ||\n      (this.connecting &&\n        this.mouseX === x &&\n        this.mouseY === y &&\n        this.nearestOpenTerminal(equipment) === 'bottom') ||\n      bottomTerminal ||\n      singleTerminal.has(eqType)\n        ? nothing\n        : svg`<polygon points=\"0.3,1 0.7,1 0.5,0.6\" \n                fill=\"#12579B\" opacity=\"0.4\" />`;\n\n    return svg`<g class=\"${classMap({\n      equipment: true,\n      preview: this.placing === equipment,\n    })}\"\n    id=\"${elementPath(equipment)}\"\n    transform=\"translate(${x} ${y}) rotate(${deg})${\n      flip ? ' scale(-1,1)' : ''\n    }\" transform-origin=\"0.5 0.5\">\n      <title>${equipment.getAttribute('name')}</title>\n      <use href=\"#${symbol}\" pointer-events=\"none\" />\n      <rect width=\"1\" height=\"1\" fill=\"none\" pointer-events=\"${\n        connect ? 'none' : 'all'\n      }\"\n        @click=${handleClick}\n        @auxclick=${({ button }: MouseEvent) => {\n          if (button === 1)\n            // middle mouse button\n            this.dispatchEvent(newRotateEvent(equipment));\n        }}\n        @contextmenu=${(e: MouseEvent) => {\n          this.menu = { element: equipment, left: e.clientX, top: e.clientY };\n          e.preventDefault();\n        }}\n      />\n      ${topConnector}\n      ${topIndicator}\n      ${bottomConnector}\n      ${bottomIndicator}\n    </g>`;\n  }\n\n  renderConnectivityNode(cNode: Element) {\n    const priv = cNode.querySelector(`Private[type=\"${privType}\"]`);\n    if (!priv) return nothing;\n    const circles = [] as TemplateResult<2>[];\n    const intersections = Object.entries(\n      Array.from(priv.querySelectorAll('Vertex'))\n        .map(v => this.renderedPosition(v))\n        .reduce((obj, pos) => {\n          const ret = obj;\n          const key = JSON.stringify(pos);\n          if (ret[key]) ret[key].count += 1;\n          else ret[key] = { val: pos, count: 1 };\n          return ret;\n        }, {} as Record<string, { val: Point; count: number }>)\n    )\n      .filter(([_, { count }]) => count > 2)\n      .map(([_, { val }]) => val);\n    intersections.forEach(([x, y]) =>\n      circles.push(svg`<circle fill=\"black\" cx=\"${x}\" cy=\"${y}\" r=\"0.15\" />`)\n    );\n    const lines = [] as TemplateResult<2>[];\n    const sections = Array.from(priv.getElementsByTagNameNS(sldNs, 'Section'));\n    sections.forEach(section => {\n      const vertices = Array.from(\n        section.getElementsByTagNameNS(sldNs, 'Vertex')\n      ).map(vertex => this.renderedPosition(vertex));\n      let i = 0;\n      while (i < vertices.length - 1) {\n        const [x1, y1] = vertices[i];\n        const [x2, y2] = vertices[i + 1];\n        const handleClick = () => {\n          if (!this.connecting) return;\n          const { equipment, path, terminal } = this.connecting;\n          if (\n            equipment.querySelector(\n              `Terminal[connectivityNode=\"${cNode.getAttribute('pathName')}\"]`\n            )\n          )\n            return;\n          const [[oldX1, _y], [oldX2, oldY2]] = path.slice(-2);\n          const vertical = oldX1 === oldX2;\n\n          const x3 = this.mouseX + 0.5;\n          const y3 = this.mouseY + 0.5;\n\n          const newX2 = vertical ? oldX2 : x3;\n          const newY2 = vertical ? y3 : oldY2;\n\n          path[path.length - 1] = [newX2, newY2];\n          path.push([x3, y3]);\n          cleanPath(path);\n          this.dispatchEvent(\n            newConnectEvent({\n              equipment,\n              terminal,\n              path,\n              connectTo: cNode,\n            })\n          );\n        };\n        lines.push(\n          svg`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\"\n                stroke-linecap=\"square\" stroke=\"black\" stroke-width=\"0.06\" />`\n        );\n        lines.push(\n          svg`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\"\n                pointer-events=\"all\" @click=${handleClick}\n                stroke=\"none\" stroke-width=\"${\n                  this.connecting ? '1' : '0.4'\n                }\" />`\n        );\n        if (this.connecting && ![x2, y2].find(n => Number.isInteger(n)))\n          lines.push(\n            svg`<rect x=\"${x2 - 0.5}\" y=\"${y2 - 0.5}\" width=\"1\" height=\"1\"\n                pointer-events=\"all\" @click=${handleClick}\n                fill=\"none\" />`\n          );\n        i += 1;\n      }\n    });\n    return svg`<g class=\"node\" id=\"${elementPath(cNode)}\" >\n        <title>${cNode.getAttribute('pathName')}</title>\n        ${circles}\n        ${lines}\n      </g>`;\n  }\n\n  static styles = css`\n    h2 {\n      font-family: Roboto;\n      font-weight: 300;\n      font-size: 24px;\n      margin-bottom: 4px;\n      --mdc-icon-button-size: 28px;\n      --mdc-icon-size: 24px;\n    }\n  `;\n}\n"]}